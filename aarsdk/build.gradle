plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.android'  
}

android {
    namespace = "pro.repairclub.stub"
    compileSdk = 34

    defaultConfig {
        minSdk = 28  
        targetSdk = 34
        versionCode = 1
        versionName = "1.3.12"  // Match with git tag
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    buildFeatures {
        compose = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    
    // Network dependencies - use api for transitive dependencies
    api 'com.google.code.gson:gson:2.10.1'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // RxJava dependencies
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    api 'io.reactivex.rxjava2:rxjava:2.2.21'
    api 'com.jakewharton.rx2:replaying-share:2.2.0'
    
    // Kotlin dependencies
    api platform('org.jetbrains.kotlin:kotlin-bom:1.9.22')
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    api 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    
    // Core dependencies
    // implementation 'androidx.core:core-ktx:1.12.0'
    api 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    api 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    
    // Logging
    api 'com.jakewharton.timber:timber:5.0.1'
    
    // BLE
    api 'com.github.weliem:blessed-kotlin:3.0.5'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = "com.github.RRCummins"
                artifactId = "RepairClubAndroidSDK"
                version = "1.2.20"  // Match with versionName and git tag

                artifact(file("libs/RepairClubSDK-release.aar")) {
                    extension = "aar"
                }

                pom {
                    name = 'RepairClubAndroidSDK'
                    description = 'Android SDK for RepairClub'
                    
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')
                        
                        // Core dependencies
                        addDependency(dependenciesNode, 'androidx.core', 'core-ktx', '1.12.0')
                        addDependency(dependenciesNode, 'androidx.lifecycle', 'lifecycle-runtime-ktx', '2.7.0')
                        
                        // RxJava dependencies
                        addDependency(dependenciesNode, 'io.reactivex.rxjava2', 'rxandroid', '2.1.1')
                        addDependency(dependenciesNode, 'io.reactivex.rxjava2', 'rxjava', '2.2.21')
                        addDependency(dependenciesNode, 'com.jakewharton.rx2', 'replaying-share', '2.2.0')
                        
                        // Kotlin dependencies
                        addDependencyWithBom(dependenciesNode, 'org.jetbrains.kotlin', 'kotlin-bom', '1.9.22')
                        addDependency(dependenciesNode, 'org.jetbrains.kotlinx', 'kotlinx-coroutines-core', '1.7.3')
                        addDependency(dependenciesNode, 'org.jetbrains.kotlinx', 'kotlinx-coroutines-android', '1.7.3')
                        addDependency(dependenciesNode, 'com.jakewharton.retrofit', 'retrofit2-kotlin-coroutines-adapter', '0.9.2')
                        
                        // Lifecycle dependencies
                        addDependency(dependenciesNode, 'androidx.lifecycle', 'lifecycle-viewmodel-ktx', '2.7.0')
                        addDependency(dependenciesNode, 'androidx.lifecycle', 'lifecycle-livedata-ktx', '2.7.0')
                        addDependency(dependenciesNode, 'androidx.lifecycle', 'lifecycle-runtime-ktx', '2.7.0')
                        addDependency(dependenciesNode, 'androidx.localbroadcastmanager', 'localbroadcastmanager', '1.1.0')
                        
                        // Logging dependencies
                        addDependency(dependenciesNode, 'com.jakewharton.timber', 'timber', '5.0.1')
                        addDependency(dependenciesNode, 'com.google.code.gson', 'gson', '2.10.1')
                        addDependency(dependenciesNode, 'com.squareup.okhttp3', 'logging-interceptor', '4.12.0')
                        
                        // Retrofit dependencies
                        addDependency(dependenciesNode, 'com.squareup.retrofit2', 'retrofit', '2.9.0')
                        addDependency(dependenciesNode, 'com.squareup.retrofit2', 'converter-gson', '2.9.0')
                        
                        // BLE dependency
                        addDependency(dependenciesNode, 'com.github.weliem', 'blessed-kotlin', '3.0.5')
                    }
                }
            }
        }
    }
}

// Helper functions for POM dependencies
def addDependency(dependenciesNode, group, artifact, version) {
    def dependencyNode = dependenciesNode.appendNode('dependency')
    dependencyNode.appendNode('groupId', group)
    dependencyNode.appendNode('artifactId', artifact)
    dependencyNode.appendNode('version', version)
}

def addDependencyWithBom(dependenciesNode, group, artifact, version) {
    def dependencyNode = dependenciesNode.appendNode('dependency')
    dependencyNode.appendNode('groupId', group)
    dependencyNode.appendNode('artifactId', artifact)
    dependencyNode.appendNode('version', version)
    dependencyNode.appendNode('type', 'pom')
    dependencyNode.appendNode('scope', 'import')
}

def addDependencyNoBom(dependenciesNode, group, artifact) {
    def dependencyNode = dependenciesNode.appendNode('dependency')
    dependencyNode.appendNode('groupId', group)
    dependencyNode.appendNode('artifactId', artifact)
}

tasks.register("install") {
    dependsOn("publishReleasePublicationToMavenLocal")
}