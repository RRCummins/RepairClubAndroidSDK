plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.android'  
}

android {
    namespace = "pro.repairclub.stub"
    compileSdk = 34

    defaultConfig {
        minSdk = 28  
        targetSdk = 34
        versionCode = 1
        versionName = "1.2.16"  // Match with git tag
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    buildFeatures {
        compose = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    
    // Core dependencies
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    
    // Compose dependencies
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2024.01.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.material3:material3'
    
    // Logging
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = "com.github.RRCummins"
                artifactId = "RepairClubAndroidSDK"
                version = "1.2.15"  // Match with versionName and git tag

                artifact(file("libs/RepairClubSDK-release.aar")) {
                    extension = "aar"
                }

                pom {
                    name = 'RepairClubAndroidSDK'
                    description = 'Android SDK for RepairClub'
                    
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')
                        
                        // Add core dependencies
                        addDependency(dependenciesNode, 'androidx.core', 'core-ktx', '1.12.0')
                        addDependency(dependenciesNode, 'androidx.lifecycle', 'lifecycle-runtime-ktx', '2.7.0')
                        
                        // Add Compose dependencies with BOM
                        addDependency(dependenciesNode, 'androidx.activity', 'activity-compose', '1.8.2')
                        addDependencyWithBom(dependenciesNode, 'androidx.compose', 'compose-bom', '2024.01.00')
                        addDependencyNoBom(dependenciesNode, 'androidx.compose.ui', 'ui')
                        addDependencyNoBom(dependenciesNode, 'androidx.compose.ui', 'ui-graphics')
                        addDependencyNoBom(dependenciesNode, 'androidx.compose.material3', 'material3')
                        
                        // Add logging dependency
                        addDependency(dependenciesNode, 'com.squareup.okhttp3', 'logging-interceptor', '4.12.0')
                    }
                }
            }
        }
    }
}

// Helper functions for POM dependencies
def addDependency(dependenciesNode, group, artifact, version) {
    def dependencyNode = dependenciesNode.appendNode('dependency')
    dependencyNode.appendNode('groupId', group)
    dependencyNode.appendNode('artifactId', artifact)
    dependencyNode.appendNode('version', version)
}

def addDependencyWithBom(dependenciesNode, group, artifact, version) {
    def dependencyNode = dependenciesNode.appendNode('dependency')
    dependencyNode.appendNode('groupId', group)
    dependencyNode.appendNode('artifactId', artifact)
    dependencyNode.appendNode('version', version)
    dependencyNode.appendNode('type', 'pom')
    dependencyNode.appendNode('scope', 'import')
}

def addDependencyNoBom(dependenciesNode, group, artifact) {
    def dependencyNode = dependenciesNode.appendNode('dependency')
    dependencyNode.appendNode('groupId', group)
    dependencyNode.appendNode('artifactId', artifact)
}

tasks.register("install") {
    dependsOn("publishReleasePublicationToMavenLocal")
}